// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/employers": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the details of the authenticated employer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employers"
                ],
                "summary": "Get employer",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.employerResponse"
                        }
                    },
                    "401": {
                        "description": "Only employers can access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new employer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employers"
                ],
                "summary": "Create employer",
                "parameters": [
                    {
                        "description": "Employer and company details",
                        "name": "CreateEmployerRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createEmployerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.employerResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Company with given name or employer with given email already exists",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete the logged-in employer",
                "tags": [
                    "employers"
                ],
                "summary": "Delete employer",
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "null"
                        }
                    },
                    "401": {
                        "description": "Only employers can access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the details of the authenticated employer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employers"
                ],
                "summary": "Update employer",
                "parameters": [
                    {
                        "description": "Employer details to update",
                        "name": "UpdateEmployerRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateEmployerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.employerResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Only employers can access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/employers/login": {
            "post": {
                "description": "Login an employer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employers"
                ],
                "summary": "Login employer",
                "parameters": [
                    {
                        "description": "Employer credentials",
                        "name": "LoginEmployerRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.loginEmployerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.loginEmployerResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Incorrect password",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Email not verified",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Employer with given email or company with given id does not exist",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/employers/password": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update/change logged-in employer password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employers"
                ],
                "summary": "Update employer password",
                "parameters": [
                    {
                        "description": "Employer old and new password",
                        "name": "UpdateEmployerPasswordRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateEmployerPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.updateEmployerPasswordResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Incorrect password or request made a user, not employer.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/employers/send-verification-email": {
            "get": {
                "description": "Send to the employer an email with a link that should be used to verify their email address.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employers"
                ],
                "summary": "Send employer verification email",
                "parameters": [
                    {
                        "type": "string",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.sendVerificationEmailToEmployerResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Email.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No employer found with the provided email.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/employers/user-details/{email}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a user as employer. Returns user details and skills. Only employers can access this endpoint.",
                "tags": [
                    "employers"
                ],
                "summary": "Get user as employer",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.userResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid email in uri.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Only employers can access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User with given email does not exist.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/employers/verify-email": {
            "get": {
                "description": "Verify employer email by providing verify email ID and secret code that should be sent to the user in the verification email.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employers"
                ],
                "summary": "Verify employer email",
                "parameters": [
                    {
                        "minLength": 32,
                        "type": "string",
                        "name": "code",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.verifyEmployerEmailResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/job-applications": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a job application. Only users can access this endpoint.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job applications"
                ],
                "summary": "Create job application",
                "parameters": [
                    {
                        "type": "file",
                        "description": "CV file (.pdf)",
                        "name": "cv",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Message for the employer",
                        "name": "message",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Job ID",
                        "name": "job_id",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.jobApplicationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Only users can access, not employers.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/job-applications/employer": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List job applications for a job with a given ID. Only employers can access this endpoint. Returns a list of job applications that were made for a given job. Results are paginated based on page and page_size query parameters.",
                "tags": [
                    "job applications"
                ],
                "summary": "List job applications (employer)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "job ID",
                        "name": "job_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sort by date ('date-asc' or 'date-desc')",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter by status ('Applied', 'Seen', 'Interviewing', 'Offered', 'Rejected')",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.ListJobApplicationsForEmployerRow"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Only employers can access, not users.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Employer is trying to access job that does not belong to them.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Job with given ID does not exist",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/job-applications/employer/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get job application for an employer. Only employers can access this endpoint. It returns different details than getJobApplicationForUser.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job applications"
                ],
                "summary": "Get job application for employer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "job application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.getJobApplicationForEmployerResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Only employers can access, not users.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Only an employer that is part of the company that created the job that this application is for can access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/job-applications/employer/{id}/status": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Change job application status as an employer. Only employers can access this endpoint.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job applications"
                ],
                "summary": "Change job application status (employer)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "job application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new status",
                        "name": "new_status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.changeJobApplicationStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.changeJobApplicationStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid status or job application ID",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Only employers can access, not users.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Only an employer that is part of the company that created the job that this application is for can access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Job application with given ID does not exist",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/job-applications/notification": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Send notification for job application status update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job applications"
                ],
                "summary": "Send job application notification",
                "parameters": [
                    {
                        "description": "Notification details",
                        "name": "NotifyJobApplicationRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.notifyJobApplicationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.notificationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Job application not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/job-applications/user": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List job applications. Only users can access this endpoint. Returns a list of job applications that authenticated user created. Results are paginated based on page and page_size query parameters.",
                "tags": [
                    "job applications"
                ],
                "summary": "List job applications (user)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sort by date ('date-asc' or 'date-desc')",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter by status ('Applied', 'Seen', 'Interviewing', 'Offered', 'Rejected')",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.ListJobApplicationsForUserRow"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Only users can access, not employers.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/job-applications/user/notifications/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Allows authenticated user to enable/disable notifications for their job application. Only the owner of the job application can modify this setting.",
                "tags": [
                    "job applications"
                ],
                "summary": "Change job application notification setting",
                "parameters": [
                    {
                        "description": "Notification settings",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.changeNotifyJobApplicationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.notificationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format or request body",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "User is trying to modify application that doesn't belong to them",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Job application not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/job-applications/user/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get job application for a user. Only users can access this endpoint. It returns different details than getJobApplicationForEmployer.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job applications"
                ],
                "summary": "Get job application for user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "job application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.getJobApplicationForUserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Only users can access, not employers.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Only the applicant (the owner) of the job application can access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a job application. Only users can access this endpoint, and only owners of the job application can delete it.",
                "tags": [
                    "job applications"
                ],
                "summary": "Delete job application (user)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "job application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "null"
                        }
                    },
                    "400": {
                        "description": "Invalid job application ID",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Only users can access, not employers.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Only a user that created this job application can access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Job application with given ID does not exist",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update job application details (message, cv) but only if the status is 'Applied' (the application was not seen by the employer). Only users can access this endpoint.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job applications"
                ],
                "summary": "Update job application (user)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "job application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "CV file (.pdf)",
                        "name": "cv",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "was CV file provided",
                        "name": "cv_provided",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Message for the employer",
                        "name": "message",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.jobApplicationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data or job application ID",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Only users can access, not employers.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Only a user that created this job application can access this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Job application with given ID does not exist",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/jobs": {
            "get": {
                "description": "Filter and list jobs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Filter and list jobs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Job title - matches partially (ILIKE)",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Job industry - exact name",
                        "name": "industry",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Job location - exact name",
                        "name": "job_location",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Salary min - must be smaller or equal salary_max",
                        "name": "salary_min",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Salary max - must be greater or equal salary_min",
                        "name": "salary_max",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/db.ListJobsByFiltersRow"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new job",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Create job",
                "parameters": [
                    {
                        "description": "Job details",
                        "name": "CreateJobRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createJobRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.jobResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/jobs/company": {
            "get": {
                "description": "List jobs by company name, id or part of the name.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "List jobs by company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Company ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Company name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Part of the company name",
                        "name": "name_contains",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/db.ListJobsByCompanyNameRow"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query. Only one of the three parameters is allowed.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/jobs/employer": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all jobs of an employer. Only employers can access this endpoint. Returns a list of jobs that were created by the authenticated employer. Results are paginated based on page and page_size query parameters.",
                "tags": [
                    "jobs"
                ],
                "summary": "List all jobs of an employer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sort by date ('date-asc' or 'date-desc')",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.ListJobsForEmployerRow"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Only employers can access, not users.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/jobs/match-skills": {
            "get": {
                "description": "List jobs that match the authenticated users skills",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "List jobs by matching skills",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/db.ListJobsMatchingUserSkillsRow"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Employer making the request - only users can access",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/jobs/search": {
            "get": {
                "description": "Search for jobs with elasticsearch.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Search jobs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "search",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/esearch.Job"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/jobs/{id}": {
            "get": {
                "description": "Get details of the job with the given id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Get job",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.jobResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request query",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Job not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete the job with the given id",
                "tags": [
                    "jobs"
                ],
                "summary": "Delete job",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "null"
                        }
                    },
                    "404": {
                        "description": "Job not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update the job with the given id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Update job",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Job details to update",
                        "name": "UpdateJobRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateJobRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.jobResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request query or body",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User making the request not an employer or employer not the owner of the job",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Job not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get details of the logged-in user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.userResponse"
                        }
                    },
                    "401": {
                        "description": "Only users can access this endpoint, not employers.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "User details",
                        "name": "CreateUserRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.userResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "User with given email already exists",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete the logged-in user",
                "tags": [
                    "users"
                ],
                "summary": "Delete user",
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "null"
                        }
                    },
                    "401": {
                        "description": "Only users can update their details using this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the logged-in user details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "description": "User details to update",
                        "name": "UpdateUserRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.userResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Only users can update their details using this endpoint.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/employer-company-details/{email}": {
            "get": {
                "description": "Get employer and company details as user. Does not require authentication.",
                "tags": [
                    "employers"
                ],
                "summary": "Get employer and company details as user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.GetEmployerAndCompanyDetailsRow"
                        }
                    },
                    "400": {
                        "description": "Invalid email in uri.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Employer with given email does not exist.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Login user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "LoginUserRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.loginUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.loginUserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Incorrect password",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Email not verified",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User with given email does not exist",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/password": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Change / update password of the logged-in user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user password",
                "parameters": [
                    {
                        "description": "Users old and new password",
                        "name": "UpdateUserPasswordRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateUserPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.updateUserPasswordResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Incorrect password or the account making the request is not a user.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/send-verification-email": {
            "get": {
                "description": "Send to the user an email with a link that should be used to verify their email address.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Send user verification email",
                "parameters": [
                    {
                        "type": "string",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.sendVerificationEmailToUserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Email.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No user found with the provided email.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/verify-email": {
            "get": {
                "description": "Verify user email by providing verify email ID and secret code that should be sent to the user in the verification email.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Verify user email",
                "parameters": [
                    {
                        "minLength": 32,
                        "type": "string",
                        "name": "code",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.verifyUserEmailResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Any other error.",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "api.Skill": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "skill": {
                    "type": "string"
                },
                "years_of_experience": {
                    "type": "integer"
                }
            }
        },
        "api.changeJobApplicationStatusRequest": {
            "type": "object",
            "required": [
                "new_status"
            ],
            "properties": {
                "new_status": {
                    "enum": [
                        "Interviewing",
                        "Offered",
                        "Rejected"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/db.ApplicationStatus"
                        }
                    ]
                }
            }
        },
        "api.changeJobApplicationStatusResponse": {
            "type": "object",
            "properties": {
                "application_id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/db.ApplicationStatus"
                }
            }
        },
        "api.changeNotifyJobApplicationRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "notification": {
                    "type": "boolean"
                }
            }
        },
        "api.createEmployerRequest": {
            "type": "object",
            "required": [
                "company_industry",
                "company_location",
                "company_name",
                "email",
                "full_name",
                "password"
            ],
            "properties": {
                "company_industry": {
                    "type": "string"
                },
                "company_location": {
                    "type": "string"
                },
                "company_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "api.createJobRequest": {
            "type": "object",
            "required": [
                "description",
                "industry",
                "location",
                "required_skills",
                "requirements",
                "salary_max",
                "salary_min",
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "industry": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "required_skills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "requirements": {
                    "type": "string"
                },
                "salary_max": {
                    "type": "integer",
                    "minimum": 0
                },
                "salary_min": {
                    "type": "integer",
                    "minimum": 0
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.createUserRequest": {
            "type": "object",
            "required": [
                "desired_industry",
                "desired_job_title",
                "desired_salary_max",
                "desired_salary_min",
                "email",
                "full_name",
                "location",
                "password"
            ],
            "properties": {
                "desired_industry": {
                    "type": "string"
                },
                "desired_job_title": {
                    "type": "string"
                },
                "desired_salary_max": {
                    "type": "integer",
                    "minimum": 0
                },
                "desired_salary_min": {
                    "type": "integer",
                    "minimum": 0
                },
                "email": {
                    "type": "string"
                },
                "experience": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "skills": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Skill"
                    }
                },
                "skills_description": {
                    "type": "string"
                },
                "telegram_id": {
                    "type": "string"
                }
            }
        },
        "api.employerResponse": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "integer"
                },
                "company_industry": {
                    "type": "string"
                },
                "company_location": {
                    "type": "string"
                },
                "company_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "employer_created_at": {
                    "type": "string"
                },
                "employer_id": {
                    "type": "integer"
                },
                "full_name": {
                    "type": "string"
                }
            }
        },
        "api.getJobApplicationForEmployerResponse": {
            "type": "object",
            "properties": {
                "application_date": {
                    "type": "string"
                },
                "application_id": {
                    "type": "integer"
                },
                "application_message": {
                    "type": "string"
                },
                "application_status": {
                    "$ref": "#/definitions/db.ApplicationStatus"
                },
                "cv_link": {
                    "type": "string"
                },
                "job_id": {
                    "type": "integer"
                },
                "job_title": {
                    "type": "string"
                },
                "user_email": {
                    "type": "string"
                },
                "user_full_name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "user_location": {
                    "type": "string"
                }
            }
        },
        "api.getJobApplicationForUserResponse": {
            "type": "object",
            "properties": {
                "application_date": {
                    "type": "string"
                },
                "application_id": {
                    "type": "integer"
                },
                "application_message": {
                    "type": "string"
                },
                "application_status": {
                    "$ref": "#/definitions/db.ApplicationStatus"
                },
                "company_name": {
                    "type": "string"
                },
                "cv_link": {
                    "type": "string"
                },
                "job_id": {
                    "type": "integer"
                },
                "job_title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "api.jobApplicationResponse": {
            "type": "object",
            "properties": {
                "applied_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "job_id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/db.ApplicationStatus"
                }
            }
        },
        "api.jobResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "industry": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "required_skills": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.ListJobSkillsByJobIDRow"
                    }
                },
                "requirements": {
                    "type": "string"
                },
                "salary_max": {
                    "type": "integer"
                },
                "salary_min": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.loginEmployerRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "api.loginEmployerResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "employer": {
                    "$ref": "#/definitions/api.employerResponse"
                }
            }
        },
        "api.loginUserRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "api.loginUserResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/api.userResponse"
                }
            }
        },
        "api.notificationResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "api.notifyJobApplicationRequest": {
            "type": "object",
            "required": [
                "application_id",
                "status"
            ],
            "properties": {
                "application_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "pending",
                        "accepted",
                        "rejected"
                    ]
                }
            }
        },
        "api.sendVerificationEmailToEmployerResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "api.sendVerificationEmailToUserResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "api.updateEmployerPasswordRequest": {
            "type": "object",
            "required": [
                "new_password",
                "old_password"
            ],
            "properties": {
                "new_password": {
                    "type": "string",
                    "minLength": 6
                },
                "old_password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "api.updateEmployerPasswordResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "api.updateEmployerRequest": {
            "type": "object",
            "properties": {
                "company_industry": {
                    "type": "string"
                },
                "company_location": {
                    "type": "string"
                },
                "company_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                }
            }
        },
        "api.updateJobRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "industry": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "required_skill_ids_to_remove": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "required_skills_to_add": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "requirements": {
                    "type": "string"
                },
                "salary_max": {
                    "type": "integer"
                },
                "salary_min": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.updateUserPasswordRequest": {
            "type": "object",
            "required": [
                "new_password",
                "old_password"
            ],
            "properties": {
                "new_password": {
                    "type": "string",
                    "minLength": 6
                },
                "old_password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "api.updateUserPasswordResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "api.updateUserRequest": {
            "type": "object",
            "properties": {
                "desired_industry": {
                    "type": "string"
                },
                "desired_job_title": {
                    "type": "string"
                },
                "desired_salary_max": {
                    "type": "integer"
                },
                "desired_salary_min": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "experience": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "skill_ids_to_remove": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "skills_description": {
                    "type": "string"
                },
                "skills_to_add": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Skill"
                    }
                }
            }
        },
        "api.userResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "desired_industry": {
                    "type": "string"
                },
                "desired_job_title": {
                    "type": "string"
                },
                "desired_salary_max": {
                    "type": "integer"
                },
                "desired_salary_min": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "experience": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "skills": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Skill"
                    }
                },
                "skills_description": {
                    "type": "string"
                },
                "telegram_id": {
                    "type": "string"
                }
            }
        },
        "api.verifyEmployerEmailResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "api.verifyUserEmailResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "db.ApplicationStatus": {
            "type": "string",
            "enum": [
                "Applied",
                "Seen",
                "Interviewing",
                "Offered",
                "Rejected"
            ],
            "x-enum-varnames": [
                "ApplicationStatusApplied",
                "ApplicationStatusSeen",
                "ApplicationStatusInterviewing",
                "ApplicationStatusOffered",
                "ApplicationStatusRejected"
            ]
        },
        "db.GetEmployerAndCompanyDetailsRow": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "integer"
                },
                "company_industry": {
                    "type": "string"
                },
                "company_location": {
                    "type": "string"
                },
                "company_name": {
                    "type": "string"
                },
                "employer_email": {
                    "type": "string"
                },
                "employer_full_name": {
                    "type": "string"
                },
                "employer_id": {
                    "type": "integer"
                }
            }
        },
        "db.ListJobApplicationsForEmployerRow": {
            "type": "object",
            "properties": {
                "application_date": {
                    "type": "string"
                },
                "application_id": {
                    "type": "integer"
                },
                "application_status": {
                    "$ref": "#/definitions/db.ApplicationStatus"
                },
                "user_email": {
                    "type": "string"
                },
                "user_full_name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "db.ListJobApplicationsForUserRow": {
            "type": "object",
            "properties": {
                "application_date": {
                    "type": "string"
                },
                "application_id": {
                    "type": "integer"
                },
                "application_status": {
                    "$ref": "#/definitions/db.ApplicationStatus"
                },
                "company_name": {
                    "type": "string"
                },
                "job_id": {
                    "type": "integer"
                },
                "job_title": {
                    "type": "string"
                },
                "notification": {
                    "type": "boolean"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "db.ListJobSkillsByJobIDRow": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "skill": {
                    "type": "string"
                }
            }
        },
        "db.ListJobsByCompanyNameRow": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "integer"
                },
                "company_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "industry": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "requirements": {
                    "type": "string"
                },
                "salary_max": {
                    "type": "integer"
                },
                "salary_min": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "db.ListJobsByFiltersRow": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "integer"
                },
                "company_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "industry": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "requirements": {
                    "type": "string"
                },
                "salary_max": {
                    "type": "integer"
                },
                "salary_min": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "db.ListJobsForEmployerRow": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "industry": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "salary_max": {
                    "type": "integer"
                },
                "salary_min": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "db.ListJobsMatchingUserSkillsRow": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "integer"
                },
                "company_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "industry": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "requirements": {
                    "type": "string"
                },
                "salary_max": {
                    "type": "integer"
                },
                "salary_min": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "esearch.Job": {
            "type": "object",
            "properties": {
                "company_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "industry": {
                    "type": "string"
                },
                "job_skills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "location": {
                    "type": "string"
                },
                "requirements": {
                    "type": "string"
                },
                "salary_max": {
                    "type": "integer"
                },
                "salary_min": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Use 'bearer {token}' without quotes.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
