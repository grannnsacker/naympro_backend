definitions:
  api.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  api.Skill:
    properties:
      id:
        type: integer
      skill:
        type: string
      years_of_experience:
        type: integer
    type: object
  api.changeJobApplicationStatusRequest:
    properties:
      new_status:
        allOf:
        - $ref: '#/definitions/db.ApplicationStatus'
        enum:
        - Interviewing
        - Offered
        - Rejected
    required:
    - new_status
    type: object
  api.changeJobApplicationStatusResponse:
    properties:
      application_id:
        type: integer
      message:
        type: string
      status:
        $ref: '#/definitions/db.ApplicationStatus'
    type: object
  api.changeNotifyJobApplicationRequest:
    properties:
      id:
        type: integer
      notification:
        type: boolean
    type: object
  api.createEmployerRequest:
    properties:
      company_industry:
        type: string
      company_location:
        type: string
      company_name:
        type: string
      email:
        type: string
      full_name:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - company_industry
    - company_location
    - company_name
    - email
    - full_name
    - password
    type: object
  api.createJobRequest:
    properties:
      description:
        type: string
      industry:
        type: string
      location:
        type: string
      required_skills:
        items:
          type: string
        type: array
      requirements:
        type: string
      salary_max:
        minimum: 0
        type: integer
      salary_min:
        minimum: 0
        type: integer
      title:
        type: string
    required:
    - description
    - industry
    - location
    - required_skills
    - requirements
    - salary_max
    - salary_min
    - title
    type: object
  api.createUserRequest:
    properties:
      desired_industry:
        type: string
      desired_job_title:
        type: string
      desired_salary_max:
        minimum: 0
        type: integer
      desired_salary_min:
        minimum: 0
        type: integer
      email:
        type: string
      experience:
        type: string
      full_name:
        type: string
      location:
        type: string
      password:
        minLength: 6
        type: string
      skills:
        items:
          $ref: '#/definitions/api.Skill'
        type: array
      skills_description:
        type: string
      telegram_id:
        type: string
    required:
    - desired_industry
    - desired_job_title
    - desired_salary_max
    - desired_salary_min
    - email
    - full_name
    - location
    - password
    type: object
  api.employerResponse:
    properties:
      company_id:
        type: integer
      company_industry:
        type: string
      company_location:
        type: string
      company_name:
        type: string
      email:
        type: string
      employer_created_at:
        type: string
      employer_id:
        type: integer
      full_name:
        type: string
    type: object
  api.getJobApplicationForEmployerResponse:
    properties:
      application_date:
        type: string
      application_id:
        type: integer
      application_message:
        type: string
      application_status:
        $ref: '#/definitions/db.ApplicationStatus'
      cv_link:
        type: string
      job_id:
        type: integer
      job_title:
        type: string
      user_email:
        type: string
      user_full_name:
        type: string
      user_id:
        type: integer
      user_location:
        type: string
    type: object
  api.getJobApplicationForUserResponse:
    properties:
      application_date:
        type: string
      application_id:
        type: integer
      application_message:
        type: string
      application_status:
        $ref: '#/definitions/db.ApplicationStatus'
      company_name:
        type: string
      cv_link:
        type: string
      job_id:
        type: integer
      job_title:
        type: string
      user_id:
        type: integer
    type: object
  api.jobApplicationResponse:
    properties:
      applied_at:
        type: string
      id:
        type: integer
      job_id:
        type: integer
      message:
        type: string
      status:
        $ref: '#/definitions/db.ApplicationStatus'
    type: object
  api.jobResponse:
    properties:
      description:
        type: string
      industry:
        type: string
      location:
        type: string
      required_skills:
        items:
          $ref: '#/definitions/db.ListJobSkillsByJobIDRow'
        type: array
      requirements:
        type: string
      salary_max:
        type: integer
      salary_min:
        type: integer
      title:
        type: string
    type: object
  api.loginEmployerRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  api.loginEmployerResponse:
    properties:
      access_token:
        type: string
      employer:
        $ref: '#/definitions/api.employerResponse'
    type: object
  api.loginUserRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  api.loginUserResponse:
    properties:
      access_token:
        type: string
      user:
        $ref: '#/definitions/api.userResponse'
    type: object
  api.notificationResponse:
    properties:
      message:
        type: string
    type: object
  api.notifyJobApplicationRequest:
    properties:
      application_id:
        type: integer
      status:
        enum:
        - pending
        - accepted
        - rejected
        type: string
    required:
    - application_id
    - status
    type: object
  api.sendVerificationEmailToEmployerResponse:
    properties:
      message:
        type: string
    type: object
  api.sendVerificationEmailToUserResponse:
    properties:
      message:
        type: string
    type: object
  api.updateEmployerPasswordRequest:
    properties:
      new_password:
        minLength: 6
        type: string
      old_password:
        minLength: 6
        type: string
    required:
    - new_password
    - old_password
    type: object
  api.updateEmployerPasswordResponse:
    properties:
      message:
        type: string
    type: object
  api.updateEmployerRequest:
    properties:
      company_industry:
        type: string
      company_location:
        type: string
      company_name:
        type: string
      email:
        type: string
      full_name:
        type: string
    type: object
  api.updateJobRequest:
    properties:
      description:
        type: string
      industry:
        type: string
      location:
        type: string
      required_skill_ids_to_remove:
        items:
          type: integer
        type: array
      required_skills_to_add:
        items:
          type: string
        type: array
      requirements:
        type: string
      salary_max:
        type: integer
      salary_min:
        type: integer
      title:
        type: string
    type: object
  api.updateUserPasswordRequest:
    properties:
      new_password:
        minLength: 6
        type: string
      old_password:
        minLength: 6
        type: string
    required:
    - new_password
    - old_password
    type: object
  api.updateUserPasswordResponse:
    properties:
      message:
        type: string
    type: object
  api.updateUserRequest:
    properties:
      desired_industry:
        type: string
      desired_job_title:
        type: string
      desired_salary_max:
        type: integer
      desired_salary_min:
        type: integer
      email:
        type: string
      experience:
        type: string
      full_name:
        type: string
      location:
        type: string
      skill_ids_to_remove:
        items:
          type: integer
        type: array
      skills_description:
        type: string
      skills_to_add:
        items:
          $ref: '#/definitions/api.Skill'
        type: array
    type: object
  api.userResponse:
    properties:
      created_at:
        type: string
      desired_industry:
        type: string
      desired_job_title:
        type: string
      desired_salary_max:
        type: integer
      desired_salary_min:
        type: integer
      email:
        type: string
      experience:
        type: string
      full_name:
        type: string
      location:
        type: string
      skills:
        items:
          $ref: '#/definitions/api.Skill'
        type: array
      skills_description:
        type: string
      telegram_id:
        type: string
    type: object
  api.verifyEmployerEmailResponse:
    properties:
      message:
        type: string
    type: object
  api.verifyUserEmailResponse:
    properties:
      message:
        type: string
    type: object
  db.ApplicationStatus:
    enum:
    - Applied
    - Seen
    - Interviewing
    - Offered
    - Rejected
    type: string
    x-enum-varnames:
    - ApplicationStatusApplied
    - ApplicationStatusSeen
    - ApplicationStatusInterviewing
    - ApplicationStatusOffered
    - ApplicationStatusRejected
  db.GetEmployerAndCompanyDetailsRow:
    properties:
      company_id:
        type: integer
      company_industry:
        type: string
      company_location:
        type: string
      company_name:
        type: string
      employer_email:
        type: string
      employer_full_name:
        type: string
      employer_id:
        type: integer
    type: object
  db.ListJobApplicationsForEmployerRow:
    properties:
      application_date:
        type: string
      application_id:
        type: integer
      application_status:
        $ref: '#/definitions/db.ApplicationStatus'
      user_email:
        type: string
      user_full_name:
        type: string
      user_id:
        type: integer
    type: object
  db.ListJobApplicationsForUserRow:
    properties:
      application_date:
        type: string
      application_id:
        type: integer
      application_status:
        $ref: '#/definitions/db.ApplicationStatus'
      company_name:
        type: string
      job_id:
        type: integer
      job_title:
        type: string
      notification:
        type: boolean
      user_id:
        type: integer
    type: object
  db.ListJobSkillsByJobIDRow:
    properties:
      id:
        type: integer
      skill:
        type: string
    type: object
  db.ListJobsByCompanyNameRow:
    properties:
      company_id:
        type: integer
      company_name:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      industry:
        type: string
      location:
        type: string
      requirements:
        type: string
      salary_max:
        type: integer
      salary_min:
        type: integer
      title:
        type: string
    type: object
  db.ListJobsByFiltersRow:
    properties:
      company_id:
        type: integer
      company_name:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      industry:
        type: string
      location:
        type: string
      requirements:
        type: string
      salary_max:
        type: integer
      salary_min:
        type: integer
      title:
        type: string
    type: object
  db.ListJobsForEmployerRow:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      industry:
        type: string
      location:
        type: string
      salary_max:
        type: integer
      salary_min:
        type: integer
      title:
        type: string
    type: object
  db.ListJobsMatchingUserSkillsRow:
    properties:
      company_id:
        type: integer
      company_name:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      industry:
        type: string
      location:
        type: string
      requirements:
        type: string
      salary_max:
        type: integer
      salary_min:
        type: integer
      title:
        type: string
    type: object
  esearch.Job:
    properties:
      company_name:
        type: string
      description:
        type: string
      id:
        type: integer
      industry:
        type: string
      job_skills:
        items:
          type: string
        type: array
      location:
        type: string
      requirements:
        type: string
      salary_max:
        type: integer
      salary_min:
        type: integer
      title:
        type: string
    type: object
info:
  contact:
    email: a.a.gulczynski@gmail.com
    name: aalug
    url: https://github.com/aalug
paths:
  /employers:
    delete:
      description: Delete the logged-in employer
      responses:
        "204":
          description: No Content
          schema:
            type: "null"
        "401":
          description: Only employers can access this endpoint.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete employer
      tags:
      - employers
    get:
      description: Get the details of the authenticated employer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.employerResponse'
        "401":
          description: Only employers can access this endpoint.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get employer
      tags:
      - employers
    patch:
      consumes:
      - application/json
      description: Update the details of the authenticated employer
      parameters:
      - description: Employer details to update
        in: body
        name: UpdateEmployerRequest
        required: true
        schema:
          $ref: '#/definitions/api.updateEmployerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.employerResponse'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "401":
          description: Only employers can access this endpoint.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update employer
      tags:
      - employers
    post:
      consumes:
      - application/json
      description: Create a new employer
      parameters:
      - description: Employer and company details
        in: body
        name: CreateEmployerRequest
        required: true
        schema:
          $ref: '#/definitions/api.createEmployerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.employerResponse'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "403":
          description: Company with given name or employer with given email already
            exists
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Create employer
      tags:
      - employers
  /employers/login:
    post:
      consumes:
      - application/json
      description: Login an employer
      parameters:
      - description: Employer credentials
        in: body
        name: LoginEmployerRequest
        required: true
        schema:
          $ref: '#/definitions/api.loginEmployerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.loginEmployerResponse'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "401":
          description: Incorrect password
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "403":
          description: Email not verified
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Employer with given email or company with given id does not
            exist
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Login employer
      tags:
      - employers
  /employers/password:
    patch:
      consumes:
      - application/json
      description: Update/change logged-in employer password
      parameters:
      - description: Employer old and new password
        in: body
        name: UpdateEmployerPasswordRequest
        required: true
        schema:
          $ref: '#/definitions/api.updateEmployerPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.updateEmployerPasswordResponse'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "401":
          description: Incorrect password or request made a user, not employer.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update employer password
      tags:
      - employers
  /employers/send-verification-email:
    get:
      description: Send to the employer an email with a link that should be used to
        verify their email address.
      parameters:
      - in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.sendVerificationEmailToEmployerResponse'
        "400":
          description: Invalid Email.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: No employer found with the provided email.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Send employer verification email
      tags:
      - employers
  /employers/user-details/{email}:
    get:
      description: Get a user as employer. Returns user details and skills. Only employers
        can access this endpoint.
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.userResponse'
        "400":
          description: Invalid email in uri.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "401":
          description: Only employers can access this endpoint.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: User with given email does not exist.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get user as employer
      tags:
      - employers
  /employers/verify-email:
    get:
      description: Verify employer email by providing verify email ID and secret code
        that should be sent to the user in the verification email.
      parameters:
      - in: query
        minLength: 32
        name: code
        required: true
        type: string
      - in: query
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.verifyEmployerEmailResponse'
        "400":
          description: Invalid request body.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Verify employer email
      tags:
      - employers
  /job-applications:
    post:
      consumes:
      - multipart/form-data
      description: Create a job application. Only users can access this endpoint.
      parameters:
      - description: CV file (.pdf)
        in: formData
        name: cv
        required: true
        type: file
      - description: Message for the employer
        in: formData
        name: message
        type: string
      - description: Job ID
        in: formData
        name: job_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.jobApplicationResponse'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "401":
          description: Unauthorized. Only users can access, not employers.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create job application
      tags:
      - job applications
  /job-applications/employer:
    get:
      description: List job applications for a job with a given ID. Only employers
        can access this endpoint. Returns a list of job applications that were made
        for a given job. Results are paginated based on page and page_size query parameters.
      parameters:
      - description: job ID
        in: query
        name: job_id
        required: true
        type: integer
      - description: page number
        in: query
        name: page
        required: true
        type: integer
      - description: page size
        in: query
        name: page_size
        required: true
        type: integer
      - description: sort by date ('date-asc' or 'date-desc')
        in: query
        name: sort
        type: string
      - description: filter by status ('Applied', 'Seen', 'Interviewing', 'Offered',
          'Rejected')
        in: query
        name: status
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.ListJobApplicationsForEmployerRow'
            type: array
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "401":
          description: Unauthorized. Only employers can access, not users.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "403":
          description: Employer is trying to access job that does not belong to them.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Job with given ID does not exist
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List job applications (employer)
      tags:
      - job applications
  /job-applications/employer/{id}:
    get:
      description: Get job application for an employer. Only employers can access
        this endpoint. It returns different details than getJobApplicationForUser.
      parameters:
      - description: job application ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.getJobApplicationForEmployerResponse'
        "400":
          description: Invalid ID
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "401":
          description: Unauthorized. Only employers can access, not users.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "403":
          description: Only an employer that is part of the company that created the
            job that this application is for can access this endpoint.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get job application for employer
      tags:
      - job applications
  /job-applications/employer/{id}/status:
    patch:
      description: Change job application status as an employer. Only employers can
        access this endpoint.
      parameters:
      - description: job application ID
        in: path
        name: id
        required: true
        type: integer
      - description: new status
        in: body
        name: new_status
        required: true
        schema:
          $ref: '#/definitions/api.changeJobApplicationStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.changeJobApplicationStatusResponse'
        "400":
          description: Invalid status or job application ID
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "401":
          description: Unauthorized. Only employers can access, not users.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "403":
          description: Only an employer that is part of the company that created the
            job that this application is for can access this endpoint.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Job application with given ID does not exist
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Change job application status (employer)
      tags:
      - job applications
  /job-applications/notification:
    post:
      consumes:
      - application/json
      description: Send notification for job application status update
      parameters:
      - description: Notification details
        in: body
        name: NotifyJobApplicationRequest
        required: true
        schema:
          $ref: '#/definitions/api.notifyJobApplicationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.notificationResponse'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Job application not found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Send job application notification
      tags:
      - job applications
  /job-applications/user:
    get:
      description: List job applications. Only users can access this endpoint. Returns
        a list of job applications that authenticated user created. Results are paginated
        based on page and page_size query parameters.
      parameters:
      - description: page number
        in: query
        name: page
        required: true
        type: integer
      - description: page size
        in: query
        name: page_size
        required: true
        type: integer
      - description: sort by date ('date-asc' or 'date-desc')
        in: query
        name: sort
        type: string
      - description: filter by status ('Applied', 'Seen', 'Interviewing', 'Offered',
          'Rejected')
        in: query
        name: status
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.ListJobApplicationsForUserRow'
            type: array
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "401":
          description: Unauthorized. Only users can access, not employers.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List job applications (user)
      tags:
      - job applications
  /job-applications/user/{id}:
    delete:
      description: Delete a job application. Only users can access this endpoint,
        and only owners of the job application can delete it.
      parameters:
      - description: job application ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
          schema:
            type: "null"
        "400":
          description: Invalid job application ID
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "401":
          description: Unauthorized. Only users can access, not employers.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "403":
          description: Only a user that created this job application can access this
            endpoint.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Job application with given ID does not exist
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete job application (user)
      tags:
      - job applications
    get:
      description: Get job application for a user. Only users can access this endpoint.
        It returns different details than getJobApplicationForEmployer.
      parameters:
      - description: job application ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.getJobApplicationForUserResponse'
        "400":
          description: Invalid ID
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "401":
          description: Unauthorized. Only users can access, not employers.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "403":
          description: Only the applicant (the owner) of the job application can access
            this endpoint.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get job application for user
      tags:
      - job applications
    patch:
      description: Update job application details (message, cv) but only if the status
        is 'Applied' (the application was not seen by the employer). Only users can
        access this endpoint.
      parameters:
      - description: job application ID
        in: path
        name: id
        required: true
        type: integer
      - description: CV file (.pdf)
        in: formData
        name: cv
        type: file
      - description: was CV file provided
        in: formData
        name: cv_provided
        required: true
        type: boolean
      - description: Message for the employer
        in: formData
        name: message
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.jobApplicationResponse'
        "400":
          description: Invalid data or job application ID
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "401":
          description: Unauthorized. Only users can access, not employers.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "403":
          description: Only a user that created this job application can access this
            endpoint.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Job application with given ID does not exist
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update job application (user)
      tags:
      - job applications
  /job-applications/user/notifications/:
    post:
      description: Allows authenticated user to enable/disable notifications for their
        job application. Only the owner of the job application can modify this setting.
      parameters:
      - description: Notification settings
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.changeNotifyJobApplicationRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.notificationResponse'
        "400":
          description: Invalid ID format or request body
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "403":
          description: User is trying to modify application that doesn't belong to
            them
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Job application not found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Change job application notification setting
      tags:
      - job applications
  /jobs:
    get:
      description: Filter and list jobs
      parameters:
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      - description: Page size
        in: query
        name: page_size
        required: true
        type: integer
      - description: Job title - matches partially (ILIKE)
        in: query
        name: title
        type: string
      - description: Job industry - exact name
        in: query
        name: industry
        type: string
      - description: Job location - exact name
        in: query
        name: job_location
        type: string
      - description: Salary min - must be smaller or equal salary_max
        in: query
        name: salary_min
        type: integer
      - description: Salary max - must be greater or equal salary_min
        in: query
        name: salary_max
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/db.ListJobsByFiltersRow'
              type: array
            type: array
        "400":
          description: Invalid query
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Filter and list jobs
      tags:
      - jobs
    post:
      consumes:
      - application/json
      description: Create a new job
      parameters:
      - description: Job details
        in: body
        name: CreateJobRequest
        required: true
        schema:
          $ref: '#/definitions/api.createJobRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.jobResponse'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create job
      tags:
      - jobs
  /jobs/{id}:
    delete:
      description: Delete the job with the given id
      parameters:
      - description: Job ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
          schema:
            type: "null"
        "404":
          description: Job not found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete job
      tags:
      - jobs
    get:
      description: Get details of the job with the given id
      parameters:
      - description: Job ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.jobResponse'
        "400":
          description: Invalid request query
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Job not found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get job
      tags:
      - jobs
    patch:
      consumes:
      - application/json
      description: update the job with the given id
      parameters:
      - description: Job ID
        in: path
        name: id
        required: true
        type: integer
      - description: Job details to update
        in: body
        name: UpdateJobRequest
        required: true
        schema:
          $ref: '#/definitions/api.updateJobRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.jobResponse'
        "400":
          description: Invalid request query or body
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "401":
          description: User making the request not an employer or employer not the
            owner of the job
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Job not found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update job
      tags:
      - jobs
  /jobs/company:
    get:
      description: List jobs by company name, id or part of the name.
      parameters:
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      - description: Page size
        in: query
        name: page_size
        required: true
        type: integer
      - description: Company ID
        in: query
        name: id
        type: integer
      - description: Company name
        in: query
        name: name
        type: string
      - description: Part of the company name
        in: query
        name: name_contains
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/db.ListJobsByCompanyNameRow'
              type: array
            type: array
        "400":
          description: Invalid query. Only one of the three parameters is allowed.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: List jobs by company
      tags:
      - jobs
  /jobs/employer:
    get:
      description: List all jobs of an employer. Only employers can access this endpoint.
        Returns a list of jobs that were created by the authenticated employer. Results
        are paginated based on page and page_size query parameters.
      parameters:
      - description: page number
        in: query
        name: page
        required: true
        type: integer
      - description: page size
        in: query
        name: page_size
        required: true
        type: integer
      - description: sort by date ('date-asc' or 'date-desc')
        in: query
        name: sort
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.ListJobsForEmployerRow'
            type: array
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "401":
          description: Unauthorized. Only employers can access, not users.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List all jobs of an employer
      tags:
      - jobs
  /jobs/match-skills:
    get:
      description: List jobs that match the authenticated users skills
      parameters:
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      - description: Page size
        in: query
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/db.ListJobsMatchingUserSkillsRow'
              type: array
            type: array
        "400":
          description: Invalid query
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "401":
          description: Employer making the request - only users can access
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: List jobs by matching skills
      tags:
      - jobs
  /jobs/search:
    get:
      description: Search for jobs with elasticsearch.
      parameters:
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      - description: Page size
        in: query
        name: page_size
        required: true
        type: integer
      - description: Search query
        in: query
        name: search
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/esearch.Job'
              type: array
            type: array
        "400":
          description: Invalid query
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Search jobs
      tags:
      - jobs
  /users:
    delete:
      description: Delete the logged-in user
      responses:
        "204":
          description: No Content
          schema:
            type: "null"
        "401":
          description: Only users can update their details using this endpoint.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete user
      tags:
      - users
    get:
      description: Get details of the logged-in user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.userResponse'
        "401":
          description: Only users can access this endpoint, not employers.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get user
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: Update the logged-in user details
      parameters:
      - description: User details to update
        in: body
        name: UpdateUserRequest
        required: true
        schema:
          $ref: '#/definitions/api.updateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.userResponse'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "401":
          description: Only users can update their details using this endpoint.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update user
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User details
        in: body
        name: CreateUserRequest
        required: true
        schema:
          $ref: '#/definitions/api.createUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.userResponse'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "403":
          description: User with given email already exists
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Create user
      tags:
      - users
  /users/employer-company-details/{email}:
    get:
      description: Get employer and company details as user. Does not require authentication.
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.GetEmployerAndCompanyDetailsRow'
        "400":
          description: Invalid email in uri.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Employer with given email does not exist.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get employer and company details as user
      tags:
      - employers
  /users/login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: User credentials
        in: body
        name: LoginUserRequest
        required: true
        schema:
          $ref: '#/definitions/api.loginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.loginUserResponse'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "401":
          description: Incorrect password
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "403":
          description: Email not verified
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: User with given email does not exist
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Login user
      tags:
      - users
  /users/password:
    patch:
      consumes:
      - application/json
      description: Change / update password of the logged-in user
      parameters:
      - description: Users old and new password
        in: body
        name: UpdateUserPasswordRequest
        required: true
        schema:
          $ref: '#/definitions/api.updateUserPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.updateUserPasswordResponse'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "401":
          description: Incorrect password or the account making the request is not
            a user.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update user password
      tags:
      - users
  /users/send-verification-email:
    get:
      description: Send to the user an email with a link that should be used to verify
        their email address.
      parameters:
      - in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.sendVerificationEmailToUserResponse'
        "400":
          description: Invalid Email.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: No user found with the provided email.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Send user verification email
      tags:
      - users
  /users/verify-email:
    get:
      description: Verify user email by providing verify email ID and secret code
        that should be sent to the user in the verification email.
      parameters:
      - in: query
        minLength: 32
        name: code
        required: true
        type: string
      - in: query
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.verifyUserEmailResponse'
        "400":
          description: Invalid request body.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Any other error.
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Verify user email
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    description: Use 'bearer {token}' without quotes.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
